#!/usr/bin/env python
import RPi.GPIO as GPIO
import time

RCLK  = 12
SRCLK = 13
SDI   = 11

##code_Row = [0x03,0x03,0x0c,0x0c,0x10,0x20,0xc0,0xc0,0x81,0x81,0x06,0x06,0x08,0x10,0x60,0x60,0xc0,0xc0,0x03,0x03,0x04,0x08,0x30,0x30,0x60,0x60,0x81,0x81,0x02,0x04,0x18,0x18,0x30,0x30,0xc0,0xc0,0x01,0x02,0x0c,0x0c,0x18,0x18,0x60,0x60,0x80,0x01,0x06,0x06,0x0c,0x0c,0x30,0x30,0x40,0x80,0x03,0x03,0x06,0x06,0x18,0x18,0x20,0x40,0x81,0x81,0x03,0x03,0x0c,0x0c,0x10,0x20,0xc0,0xc0, #A
##            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, #3 empty row between each character
##            0xe7,0xe7,0xe7,0x18,0x18,0xe7,0xe7,0xe7,0xf3,0xf3,0xf3,0x0c,0x0c,0xf3,0xf3,0xf3,0xf9,0xf9,0xf9,0x06,0x06,0xf9,0xf9,0xf9,0xfc,0xfc,0xfc,0x03,0x03,0xfc,0xfc,0xfc,0x7e,0x7e,0x7e,0x81,0x81,0x7e,0x7e,0x7e,0x3f,0x3f,0x3f,0xc0,0xc0,0x3F,0x3F,0x3F,0x9f,0x9f,0x9f,0x60,0x60,0x9f,0x9f,0x9f,0xcf,0xcf,0xcf,0x30,0x30,0xcf,0xcf,0xcf,0xe7,0xe7,0xe7,0x18,0x18,0xe7,0xe7,0xe7 #H
##            ] 
##code_Col = [0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c, #A
##            0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, #3 empty row between each character
##            0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c  #H
##            ]

code_Row = [
            0x03,0x03,0x0c,0x0c,0x10,0x20,0xc0,0xc0,0x81,0x81,0x06,0x06,0x08,0x10,0x60,0x60,0xc0,0xc0,0x03,0x03,0x04,0x08,0x30,0x30,0x60,0x60,0x81,0x81,0x02,0x04,0x18,0x18,0x30,0x30,0xc0,0xc0,0x01,0x02,0x0c,0x0c,0x18,0x18,0x60,0x60,0x80,0x01,0x06,0x06,0x0c,0x0c,0x30,0x30,0x40,0x80,0x03,0x03,0x06,0x06,0x18,0x18,0x20,0x40,0x81,0x81,0x03,0x03,0x0c,0x0c,0x10,0x20,0xc0,0xc0 #A
            ] 
code_Col = [
            0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c,0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c #A
            ]

## A
##code_Row = [0x03,0x03,0x0c,0x0c,0x10,0x20,0xc0,0xc0]
##code_Col = [0xe7,0xe7,0xdb,0xdb,0x81,0xbd,0x3c,0x3c]

## H
##code_Row = [0xe7,0xe7,0xe7,0x18,0x18,0xe7,0xe7,0xe7]
##code_Col = [0x3c,0x3c,0x3c,0x00,0x00,0x3c,0x3c,0x3c]


def print_msg():
	print 'Program is running...'
	print 'Please press Ctrl+C to end the program...'

def setup():
	GPIO.setmode(GPIO.BOARD)    # Number GPIOs by its physical location
	GPIO.setup(SDI, GPIO.OUT)
	GPIO.setup(RCLK, GPIO.OUT)
	GPIO.setup(SRCLK, GPIO.OUT)
	GPIO.output(SDI, GPIO.LOW)
	GPIO.output(RCLK, GPIO.LOW)
	GPIO.output(SRCLK, GPIO.LOW)

def hc595_in(dat):
	for bit in range(0, 8):	
		GPIO.output(SDI, 0x80 & (dat << bit))
		GPIO.output(SRCLK, GPIO.HIGH)
		GPIO.output(SRCLK, GPIO.LOW)




def hc595_out():
	GPIO.output(RCLK, GPIO.HIGH)
	GPIO.output(RCLK, GPIO.LOW)


def loop():
	while True:
		for i in range(0, len(code_Row)):
			hc595_in(code_Col[i])
			hc595_in(code_Row[i])
			hc595_out()

			hc595_in(code_Col[i])
			hc595_in(code_Row[i])
			hc595_out()
			
			hc595_in(code_Col[i])
			hc595_in(code_Row[i])
			hc595_out()
			
			hc595_in(code_Col[i])
			hc595_in(code_Row[i])
			hc595_out()
			time.sleep(0.003)

##		for i in range(len(code_Row)-1, -1, -1):
##			hc595_in(code_Col[i])
##			hc595_in(code_Row[i])
##			hc595_out()
##			time.sleep(0.009)

def destroy():   # When program ending, the function is executed. 
	GPIO.cleanup()

if __name__ == '__main__':   # Program starting from here 
	print_msg()
	setup() 
	try:
		loop()  
	except KeyboardInterrupt:
            	for bit in range(0, 16):	
                    GPIO.output(SDI, 0x00 )
                    GPIO.output(SRCLK, GPIO.HIGH)
                    GPIO.output(SRCLK, GPIO.LOW)

                GPIO.output(RCLK, GPIO.HIGH)
                GPIO.output(RCLK, GPIO.LOW)

		destroy()  
